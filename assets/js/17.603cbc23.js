(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{329:function(t,s,a){"use strict";a.r(s);var n=a(19),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js-07-字符串、对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-07-字符串、对象"}},[t._v("#")]),t._v(" js-07 字符串、对象")]),t._v(" "),a("h2",{attrs:{id:"一、字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、字符串"}},[t._v("#")]),t._v(" 一、字符串")]),t._v(" "),a("h3",{attrs:{id:"比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较"}},[t._v("#")]),t._v(" 比较")]),t._v(" "),a("p",[t._v('字符串是一位一位的比较，比如a="18",b="2"，则b>a;')]),t._v(" "),a("p",[a("code",[t._v("变量.charCodeAt(0)")]),t._v(";   显示指定下标Unicode码，每一个字符都有一个对应的Unicode编码用来记录,")]),t._v(" "),a("h3",{attrs:{id:"查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找"}},[t._v("#")]),t._v(" 查找")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("变量.charAt(n)")]),t._v("   返回指定下标对应的字符，")]),t._v(" "),a("p",[t._v("用中括号的形式使用比较多：变量[n]: IE7及以下不支持；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("s.indexOf(value,[,num])")]),t._v(";")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一个参数：返回指定字符第一次出现的位置对应下标，没有时返回-1；")])]),t._v(" "),a("li",[a("p",[t._v("两个参数：指定位置开始查找前面的字符，传入负数，默认为0；")]),t._v(" "),a("p",[t._v("如果需要查找是否有敏感词，可以判断是否不等于-1")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v('s.lastindexOf("w")')]),t._v(";   从后往左找，返回指定字符或字符串最后一次出现的位置；不影响下标，还是一样的，从左到右；")])])]),t._v(" "),a("h3",{attrs:{id:"截取"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#截取"}},[t._v("#")]),t._v(" 截取")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("slice([n],[m])")]),t._v("；")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("不填参数，返回全部；")])]),t._v(" "),a("li",[a("p",[t._v("只有n时，从n开始截取到结束；返回被截取的字符；")])]),t._v(" "),a("li",[a("p",[t._v("n,m时，从n截取到m，不包括m；（m代表的是下标m，不是多少个）")])]),t._v(" "),a("li",[a("p",[t._v("n大于m时，不置换下标，返回空字符串，不报错；")])]),t._v(" "),a("li",[a("p",[t._v("当有值为负数时，负数加字符串长度，返回参数，加完还是负数，从0开始；")]),t._v(" "),a("p",[t._v("-1截取后面一位，-2截取后面二位；")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("substring([n],[m])")]),t._v("；")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("不填参数，返回全部；")])]),t._v(" "),a("li",[a("p",[t._v("只有n时：从n截取到最后；")])]),t._v(" "),a("li",[a("p",[t._v("n,m时，从n截取到m，不包括m；")])]),t._v(" "),a("li",[a("p",[t._v("m大于n时：自动置换下标，负数为0；")])])]),t._v(" "),a("p",[t._v("和slice的区别自动置换下标，负数为0；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("substr(index，num)")]),t._v("；")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一个：从index到结束；")])]),t._v(" "),a("li",[a("p",[t._v("两个：从index截取num个；")])]),t._v(" "),a("li",[a("p",[t._v("负数：只能填写一个参数，从后面开始-1，并往前截取多少个；")])])]),t._v(" "),a("p",[t._v("前面两个是下标，substr是截取多少个；")])])]),t._v(" "),a("h3",{attrs:{id:"分割"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分割"}},[t._v("#")]),t._v(" 分割")]),t._v(" "),a("p",[a("code",[t._v("split(str,m)")]),t._v("；")]),t._v(" "),a("p",[t._v("以指定字符分割成数组，可以规定分割多少个，其余被省略；")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("不填参数时：一个数组；")])]),t._v(" "),a("li",[a("p",[t._v("一对引号：分割每个字符；")])])]),t._v(" "),a("p",[t._v("数组的方法：")]),t._v(" "),a("p",[t._v("字符串变数组："),a("code",[t._v("split()")]),t._v(";")]),t._v(" "),a("p",[t._v("数组变字符串："),a("code",[t._v("join()")]),t._v(";")]),t._v(" "),a("h3",{attrs:{id:"替换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#替换"}},[t._v("#")]),t._v(" 替换")]),t._v(" "),a("p",[a("code",[t._v("变量.replace(被替换的字符，新字符)")]),t._v("；")]),t._v(" "),a("p",[t._v("如果需要多个可以："),a("code",[t._v("变量.replace().replace()")]),t._v(";")]),t._v(" "),a("p",[t._v("返回被替换的字符，只能替换一次；")]),t._v(" "),a("h3",{attrs:{id:"大小写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大小写"}},[t._v("#")]),t._v(" 大小写")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("toLowerCase()")]),t._v(";直接转变小写；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("toUpperCase()")]),t._v("; 转换成大写；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("toLocaleLowerCase()")]),t._v(";  本地转换小写；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("toLocaleUpperCase()")]),t._v(";  本地转换成大写；")])])]),t._v(" "),a("h3",{attrs:{id:"trim"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#trim"}},[t._v("#")]),t._v(" trim")]),t._v(" "),a("p",[t._v("清除左右空格；")]),t._v(" "),a("p",[a("code",[t._v("str.trim()")])]),t._v(" "),a("h2",{attrs:{id:"三、字符串扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、字符串扩展"}},[t._v("#")]),t._v(" 三、字符串扩展")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("includes(str)")]),t._v(" : 判断是否包含指定的字符串 true|false   === indexOf")]),t._v(" "),a("p",[t._v("也可以用于数组；仅适用于普通类型的数组，不包含对象的数组；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("startsWith(str)")]),t._v(" : 判断是否以指定字符串开头")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("endsWith(str)")]),t._v(" : 判断是否以指定字符串结尾")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("repeat(count)")]),t._v(" : 重复指定次数  返回一个新的字符串")])])]),t._v(" "),a("h3",{attrs:{id:"padstart-、-padend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#padstart-、-padend"}},[t._v("#")]),t._v(" "),a("code",[t._v("padStart()")]),t._v("、 "),a("code",[t._v("padEnd()")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("接收两个参数，第一个参数为最小长度，第二个参数为补全字符串；")]),t._v(" "),a("p",[a("code",[t._v("'1'.padStart(2,'0')")]),t._v("  //返回 '01'")]),t._v(" "),a("p",[a("code",[t._v("'1'.padEnd(2,'0')")]),t._v("   //返回 '10'")])]),t._v(" "),a("li",[a("p",[t._v("如果原字符串等于或大于指定的最小长度，则返回原字符串；")]),t._v(" "),a("p",[a("code",[t._v("'10'.padStart(2,'0')")]),t._v("  //返回 '10'")])]),t._v(" "),a("li",[a("p",[t._v("如果原字符串的长度小于补全字符串的长度，则截去超出位数的补全字符串；")]),t._v(" "),a("p",[a("code",[t._v("'09-12'.padStart(10, 'YYYY-MM-DD')")]),t._v('   // "YYYY-09-12"')]),t._v(" "),a("p",[a("code",[t._v("'09-12'.padEnd(10, 'YYYY-MM-DD')")]),t._v('    // "09-12YYYY-"')])])]),t._v(" "),a("p",[t._v("字符串的练习：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//网站常用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'?user=18788889999&psd=abcdefgg123&code=Z4dCU4&message='")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"?"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"&"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//先以?号拆再以&拆")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明一个对象 保留数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ss "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"="')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ss"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" ss"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"psd"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果是user或psd就保留")]),t._v("\n        obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ss"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ss"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("将字符串倒过来：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello Word!"')]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"四、对象方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、对象方法"}},[t._v("#")]),t._v(" 四、对象方法")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("Object.is(value1,value2)")])]),t._v(" "),a("p",[t._v("判断两个值是否相等，通过Object.is判断，两个NaN是相等的；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Object.defineProperty(obj,attr,descriptor)")])]),t._v(" "),a("p",[t._v("修改或添加一个属性，通过defineProperty可以劫持一个对象的修改；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Object.defineProperties(obj,props)")])]),t._v(" "),a("p",[t._v("添加或修改多个新属性；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Object.create")])]),t._v(" "),a("p",[t._v("返回一个新对象，将传入的对象放到新对象的原型上，可以直接通过；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hhh'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {}")]),t._v("\nobj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hhh")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Object.assign(target,source.......)")])]),t._v(" "),a("p",[t._v("合并对象，返回一个新对象，将多个source对象组合到target对象身上；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Object.keys")])]),t._v(" "),a("p",[t._v("以数组的形式返回对象所有的key值，通过遍历返回的数组，再次调用原来的对象，取得所有的value值;")]),t._v(" "),a("p",[t._v("该方法不会返回不可枚举的属性；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" objArr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [{a:1},{b:2}....]")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Object.values")])]),t._v(" "),a("p",[t._v("以数组的形式返回对象所有的value值;")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Object.entries")])]),t._v(" "),a("p",[t._v("以二维数组的形式返回传入的对象，相当于es6里面的map对象；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Object.fromEntries")])]),t._v(" "),a("p",[t._v("以对象的形式返回传入的二维数组对象；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("obj.isPrototypeOf")])]),t._v(" "),a("p",[t._v("检测对象是否是另一个对象的原型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'haha'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造函数使用原型去对比;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Object.setPrototypeOf(obj1,obj2)")])]),t._v(" "),a("p",[t._v("将obj2作为原型放到obj1身上，会直接修改obj1返回一个obj2；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("obj.hasOwnProperty")])]),t._v(" "),a("p",[t._v("判断某个属性是否存在于某个对象当中，也可以使用in")]),t._v(" "),a("p",[t._v("hasOwnProperty不会判断到原型去，in会判断到原型；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Object.freeze(obj)")])]),t._v(" "),a("p",[t._v("冻结一个对象，一个被冻结的对象不能被修改;（只是冻结值，引用不会被冻结）")]),t._v(" "),a("p",[t._v("不能被修改是不能直接修改对象的基本类型的值，如果对象被重新赋值，还是可以被修改的；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hhh'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("freeze")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sss'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {name: 'hhh'}")]),t._v("\n\nobj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sss'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hny'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {name: 'hny'}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Object.isFrozen(obj)")])]),t._v(" "),a("p",[t._v("判断一个对象是否是冻结状态")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Object.getOwnpropertyNames()")])]),t._v(" "),a("p",[t._v("返回对象自身的全部属性名称；")])])]),t._v(" "),a("h2",{attrs:{id:"高频面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高频面试题"}},[t._v("#")]),t._v(" 高频面试题")]),t._v(" "),a("p",[t._v("● js 有哪些内置对象？")]),t._v(" "),a("p",[t._v("● 把下面的字符串去重，并去除掉特殊字符按照数字在前字母在后的顺序排序字符串")]),t._v(" "),a("p",[t._v("如下：“1233fddfd&3434fdsaff&454545&4545444rfdsfds&545gdsgs”")]),t._v(" "),a("p",[t._v("● 截取字符串“abcdefg”中的 def。")]),t._v(" "),a("p",[t._v("● 有这样一个 url：http://item.taobo.com/item.html?a=1&b=2&c=&d=xxx&e, 请写\n一段 js 程序提取 url 中各个 get 参数 ( 参数名和参数个数不确定 )，将其 key-value\n形式返回到一个 json 结构中，如 {a:“1”,b:“2”，c:“”，d：“xxx”，e:undefined}")]),t._v(" "),a("p",[t._v("● 判断一个字符串中出现次数最多的字符，并且统计次数。")])])}),[],!1,null,null,null);s.default=e.exports}}]);