(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{337:function(t,s,a){"use strict";a.r(s);var n=a(19),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js-18-其他api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-18-其他api"}},[t._v("#")]),t._v(" js-18 其他API")]),t._v(" "),a("h2",{attrs:{id:"一、intersectionobserver-实验性功能，ie11和ios不兼容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、intersectionobserver-实验性功能，ie11和ios不兼容"}},[t._v("#")]),t._v(" 一、IntersectionObserver    实验性功能，IE11和ios不兼容")]),t._v(" "),a("p",[t._v("判断元素是否在可视区域")]),t._v(" "),a("ol",[a("li",[t._v("用法")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" io "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntersectionObserver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始观察")]),t._v("\nio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.example'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 停止观察")]),t._v("\nio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unobserve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭观察")]),t._v("\nio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("disconnect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回所有监听的目标元素集合")]),t._v("\nio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeRecords")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("（1）callback可见性变化时的回调函数，options是参数配置对象，可选")]),t._v(" "),a("p",[t._v("（2）如果需要观察多个节点，直接调用多次observe即可；")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("callback参数用法")])]),t._v(" "),a("p",[t._v("目标元素的可见性变化时就会立即调用该函数")]),t._v(" "),a("p",[t._v("一般触发两次callback，一次是目标元素进入视口，一次是完全离开视口")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" io "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntersectionObserver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("entries")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("（1）监听一个")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" io "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntersectionObserver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("entries")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" item "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" entries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是一个数组, 只有一个元素")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加最后一个元素")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isIntersecting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("滚动到底部了"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 可以请求数据了"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.reference'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参照元素")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("IntersectionObserverEntry对象属性")])]),t._v(" "),a("ul",[a("li",[t._v("boundingClientRect 目标元素的矩形信息")]),t._v(" "),a("li",[t._v("intersectionRatio 相交区域和目标元素的比例值 intersectionRect/boundingClientRect 不可见时小于等于0")]),t._v(" "),a("li",[t._v("intersectionRect 目标元素和视窗（根）相交的矩形信息 可以称为相交区域")]),t._v(" "),a("li",[t._v("isIntersecting 目标元素当前是否可见 Boolean值 可见为true")]),t._v(" "),a("li",[t._v("rootBounds 根元素的矩形信息，没有指定根元素就是当前视窗的矩形信息")]),t._v(" "),a("li",[t._v("target 观察的目标元素")]),t._v(" "),a("li",[t._v("time 返回一个记录从IntersectionObserver的时间到交叉被触发的时间的时间戳")])]),t._v(" "),a("p",[t._v("intersectionRatio和isIntersecting用来判断元素是否在可视区域")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("options对象的配置")])]),t._v(" "),a("p",[t._v("（1）root：null    观察根元素，默认浏览器视口，指定元素的时候用于观察元素必须是指定元素的子元素")]),t._v(" "),a("p",[t._v("（2）threshold:[0,0.5,1]    一个数组，触发callback的时机")]),t._v(" "),a("p",[t._v("（3）rootMargin: '30px 100px 20px'；   用来扩大或者缩小视察的大小，使用css的定义方法")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("兼容性")])]),t._v(" "),a("p",[t._v("官方polyfill： "),a("a",{attrs:{href:"https://github.com/w3c/IntersectionObserver/tree/master/polyfill",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/w3c/IntersectionObserver/tree/master/polyfill"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"二、mutationobserver-监视dom变动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、mutationobserver-监视dom变动"}},[t._v("#")]),t._v(" 二、MutationObserver 监视DOM变动")]),t._v(" "),a("ol",[a("li",[t._v("作用：")])]),t._v(" "),a("ul",[a("li",[t._v("监视dom发生变动时，MutationObserver将收到通知并触发事先设定好的回调函数；")]),t._v(" "),a("li",[t._v("MutationObserver是异步触发的，为了避免dom频繁变动导致回调函数被频繁调用，造成浏览器卡顿；")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("MutationObserver 构造函数")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" observer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MutationObserver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncallback接收两个参数，第一个参数包含了所有mutationRecord对象的数组，第二个是MutationObserver实例本身；\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" observer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MutationObserver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("mutations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" observer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    mutations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("mutation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mutation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mutation'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("MutationObserver 实例方法；")])]),t._v(" "),a("p",[t._v("（1）observe()   用来启动监听，接受两个参数")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("第一个参数：所要观察的dom节点")])]),t._v(" "),a("li",[a("p",[t._v("第二个参数：一个配置对象，指定所要观察的特定变动")]),t._v(" "),a("ul",[a("li",[t._v("childList：子节点的变动（新增、删除或更改）")]),t._v(" "),a("li",[t._v("attributes：属性的变动；")]),t._v(" "),a("li",[t._v("characterData：节点内容或节点文本的变动；")]),t._v(" "),a("li",[t._v("subtree：是否监听该节点的所有后代节点")]),t._v(" "),a("li",[t._v("attributeOldValue：观察attributes变动时，是否需要记录变动前的值；")]),t._v(" "),a("li",[t._v("characterDataOldValue：观察characterData时，是否需要记录变动前的值；")]),t._v(" "),a("li",[t._v("attributeFilter：数组，表示需要观察特定的属性（如：['class', 'src']）")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" article "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'article'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" options "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    childList"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    attributes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nobserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("article"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("注意：childList、attributes、characterData三者必须选其一或多个，否则报错；")]),t._v(" "),a("p",[t._v("对节点添加了observe就像添加了addEventListener一样，当添加不同的options时，可以触发多次；")]),t._v(" "),a("p",[t._v("（2）disconnect()    用来停止观察，调用该方法后，dom再发生变动，也不会触发观察器；")]),t._v(" "),a("p",[t._v("（3）takeRecords()    用来清除变动记录，即不再处理未处理的变动，该方法返回变动记录的数组；")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("MutationRecord 对象")])]),t._v(" "),a("p",[t._v("dom每次发生变化时，就会生成一条变动记录（MutationRecord实例），该实例包含了与变动相关的所有信息，mutation observer处理的就是一个个mutationrecord实例所组成的数组；")]),t._v(" "),a("p",[t._v("mutationRecord对象包含了dom的相关信息：")]),t._v(" "),a("ul",[a("li",[t._v("type：观察的变动类型（attribute、characterData或者childList）。")]),t._v(" "),a("li",[t._v("target：发生变动的DOM节点。")]),t._v(" "),a("li",[t._v("addedNodes：新增的DOM节点。")]),t._v(" "),a("li",[t._v("removedNodes：删除的DOM节点。")]),t._v(" "),a("li",[t._v("previousSibling：前一个同级节点，如果没有则返回null。")]),t._v(" "),a("li",[t._v("nextSibling：下一个同级节点，如果没有则返回null。")]),t._v(" "),a("li",[t._v("attributeName：发生变动的属性。如果设置了attributeFilter，则只返回预先指定的属性。")]),t._v(" "),a("li",[t._v("oldValue：变动前的值。这个属性只对attribute和characterData变动有效，如果发生childList变动，则返回null。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);