(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{412:function(t,s,a){"use strict";a.r(s);var n=a(19),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"html-15-less-css预处理器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-15-less-css预处理器"}},[t._v("#")]),t._v(" html-15 LESS css预处理器")]),t._v(" "),a("h2",{attrs:{id:"一、预处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、预处理"}},[t._v("#")]),t._v(" 一、预处理")]),t._v(" "),a("p",[t._v("CSS 预处理器定义了一种新的语言，其基本思想是，用一种专门的编程语言，为 CSS 增加了一些编程的特性，将 CSS 作为目标生成文件，然后开发者就只要使用这种语言进行编码工作。")]),t._v(" "),a("p",[t._v("使用CSS预处理器语言,可以让你的CSS更加简洁、适应性更强、可读性更佳，更易于代码的维护等诸多好处。")]),t._v(" "),a("p",[t._v("目前CSS 预处理器技术已经非常的成熟，而且也涌现出了很多种不同的CSS 预处理器语言，其中比较优秀的有LESS、Sass（SCSS）等等")]),t._v(" "),a("p",[t._v("Less 包含一套自定义的语法及一个解析器，用户根据这些语法定义自己的样式规则，这些规则最终会通过解析器，编译生成对应的 CSS 文件,只有在被编译后才能够被浏览器识别使用。预处理编译工具koala")]),t._v(" "),a("h2",{attrs:{id:"二、基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、基本语法"}},[t._v("#")]),t._v(" 二、基本语法")]),t._v(" "),a("h3",{attrs:{id:"注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),a("p",[t._v("less有两中注释风格：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("标准的注释风格："),a("code",[t._v("/**/")]),t._v("，会保留到编译后的文件。")])]),t._v(" "),a("li",[a("p",[t._v("单行注释："),a("code",[t._v("//")]),t._v(" 不会保留到编译后的文件。")])])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("koala有两种编译方式：")]),t._v(" "),a("p",[a("code",[t._v("normal")]),t._v(" 按照完整格式编译")]),t._v(" "),a("p",[a("code",[t._v("compress")]),t._v(" 压缩编译模式，多余的不显示。")])])]),t._v(" "),a("h3",{attrs:{id:"import-导入样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-导入样式"}},[t._v("#")]),t._v(" import 导入样式")]),t._v(" "),a("p",[t._v("引入样式有两种方式：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("引入css文件："),a("code",[t._v('@import "css文件路径"')]),t._v("，空格和后缀名不能省略。")])]),t._v(" "),a("li",[a("p",[t._v("直接引入less文件："),a("code",[t._v('@import "style"')]),t._v("，引入less文件可以省略扩展名。")])])]),t._v(" "),a("p",[t._v("编译后倒入的文件会和当前文件内容合并。")]),t._v(" "),a("h3",{attrs:{id:"变量定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量定义"}},[t._v("#")]),t._v(" 变量定义")]),t._v(" "),a("p",[t._v("变量以@开头，变量名与变量值之间用冒号隔开，")]),t._v(" "),a("p",[t._v("好处是更换风格方便。直接修改变量名的值就可以了。")]),t._v(" "),a("p",[t._v("使用变量直接@变量名，修改变量名可以直接修改被使用的属性值，编译之后直接是16进制的文件。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("变量可以使用字符串，使用时必须在@之后加{};")]),t._v(" "),a("p",[t._v("@side : left; border-@{side}: 5px solid black;")])]),t._v(" "),a("li",[a("p",[t._v("变量可以使用图片路径,使用路径时需要添加引号。")]),t._v(" "),a("p",[t._v('@images: "../img"; background: url("@{images}/white-sand.png");')])])]),t._v(" "),a("h3",{attrs:{id:"嵌套使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#嵌套使用"}},[t._v("#")]),t._v(" 嵌套使用")]),t._v(" "),a("p",[t._v("选择器的嵌套：")]),t._v(" "),a("p",[t._v("可以在父元素选择器里面直接写子元素选择器嵌套使用，编译后的css文件会按照标准格式显示出来。")]),t._v(" "),a("p",[t._v("在嵌套的代码块内，可以使用&引用父元素，")]),t._v(" "),a("p",[t._v("选择器里面还可以嵌套自己本身，用&引用自己。")]),t._v(" "),a("h3",{attrs:{id:"混入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#混入"}},[t._v("#")]),t._v(" 混入")]),t._v(" "),a("p",[t._v("混入在一个class中引入另一个定义好的class，直接增加另外一个class的属性。")]),t._v(" "),a("p",[t._v("定义一些通用的属性为一个class，使用的时候直接.class名;。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".bordered")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    \n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dotted 1px black"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-bottom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solid 2px black"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("调用：")]),t._v(" "),a("div",{staticClass:"language-less extra-class"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #111"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token mixin-usage function"}},[t._v(".bordered")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),a("p",[t._v("编译后会自动给a标签加入上面定义的属性。")]),t._v(" "),a("p",[t._v("​")]),t._v(" "),a("h3",{attrs:{id:"混入参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#混入参数"}},[t._v("#")]),t._v(" 混入参数")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v(".bordeRadius "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-border-radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-moz-border-radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-o-border-radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-ms-border-radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("//前面是类名，括号里面是变量值，用来传值的; //调用时直接使用调用类名的方式，如果有给类名设置默认值， //直接就是默认值的值，需要修改里面的值可以直接括号写值。 //编译后直接加入类名里面的代码")]),t._v(" "),a("h3",{attrs:{id:"arguments变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments变量"}},[t._v("#")]),t._v(" @arguments变量")]),t._v(" "),a("blockquote",[a("p",[t._v("代表所有参数。")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v(".box-shadow "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@blur")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-moz-box-shadow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@arguments")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-box-shadow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@arguments")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-shadow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@arguments")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("//前面写类名，括号里面写用到的值,前面加@属性名，多个用逗号隔开。 //如果需要写默认值，需要用冒号隔开。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n ."),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("box-shadow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("2px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 5px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("编译后： \n.box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-moz-box-shadow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2px 5px 1px #000000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-box-shadow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2px 5px 1px #000000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-shadow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2px 5px 1px #000000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"extend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extend"}},[t._v("#")]),t._v(" extend")]),t._v(" "),a("p",[t._v("extend伪类来实现样式的继承使用")]),t._v(" "),a("p",[t._v("直接写类名，会将类名里面所有的属性加入选择器里面的属性。")]),t._v(" "),a("p",[t._v("写了extend伪类之后，编译之后会将该组合选择类名的组加入到一起，其他单独元素另起一个类名写。")]),t._v(" "),a("p",[t._v("好处是少了很多行代码。")]),t._v(" "),a("h3",{attrs:{id:"运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算"}},[t._v("#")]),t._v(" 运算")]),t._v(" "),a("p",[t._v("LESS支持一些算术运算，例如加号(+)，减号( - )，乘法(*)和除法(/)的操作 只需写好表达式，编译时会计算结果; less会为你自动推断数值的单位，所以不必每一个值都加上单位 注意：涉及优先级时以()进行优先级运算")]),t._v(" "),a("h3",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),a("p",[t._v("转换颜色、处理字符串合进行算术运算的函数。")]),t._v(" "),a("p",[t._v("颜色："),a("code",[t._v("lighten()")]),t._v(" 减淡，"),a("code",[t._v("darken()")]),t._v("加深")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".bg_light")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lighten")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rgb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("255"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 20%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".bg_darken")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   \n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("darken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 20%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("percentage")]),t._v(" 将浮点数转换为百分比字符串。\n参数：number- 一个浮点数。 返回： string (字符串) 代码示例")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("percentage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("100px/200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(";\n编译为css:\n.main")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环"}},[t._v("#")]),t._v(" 循环")]),t._v(" "),a("div",{staticClass:"language-less extra-class"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".loop("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@n")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@i")]),t._v(": 1) when ("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@i")]),t._v(" < "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@n")]),t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".demo-@{i}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  ."),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n."),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);