(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{426:function(t,a,s){"use strict";s.r(a);var n=s(19),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"jq-05-ajax-自定义jquery插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jq-05-ajax-自定义jquery插件"}},[t._v("#")]),t._v(" jq-05 ajax 自定义jquery插件")]),t._v(" "),s("h2",{attrs:{id:"一、ajax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、ajax"}},[t._v("#")]),t._v(" 一、ajax")]),t._v(" "),s("p",[t._v("ajax的优势和不足：\n● 优势：\n1. 不需要插件支持\n2. 优秀的用户体验\n3. 提高 web 程序的性能\n4. 减轻服务器和带宽的负担\n● 不足："),s("br"),t._v("\n1. 破坏浏览器前进、后退按钮的正常功能\n2. 对搜索引擎的支持不足")]),t._v(" "),s("ol",[s("li",[t._v("$.ajax({}),括号内容填写一个对象；里面写参数")])]),t._v(" "),s("p",[t._v("常用参数：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求的地址")]),t._v("\n    type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求的方式（get/post），默认为 get")]),t._v("\n    cache"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给链接加缓存")]),t._v("\n    async"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//是否异步")]),t._v("\n    timeout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置请求超时时间，单位毫秒")]),t._v("\n    data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送到后端的数据")]),t._v("\n    dataType"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 预期服务器返回的数据类型，有 xml, html, script,json, jsonp,text")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("success")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 成功的回调")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 失败的回调")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("complete")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求完成后调用的函数，请求成功或失败均调用")]),t._v("\n    global"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否触发全局的 ajax 事件，默认为 true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("$.get()；")])]),t._v(" "),s("p",[t._v("$.get(url,{}，function(){},type)；")]),t._v(" "),s("p",[t._v("第一个参数：url地址；")]),t._v(" "),s("p",[t._v("第二个参数：向后台发送的数据；")]),t._v(" "),s("p",[t._v("第三个参数：成功的处理函数；需要一个形参用来接收，第二个形参是状态status；")]),t._v(" "),s("p",[t._v("第四个参数：返回类型，一般是json；")]),t._v(" "),s("p",[t._v("以get方式传递数据，只能处理成功的信息，想要处理失败的信息需要使用$.ajax()；")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("$.post()；")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[s("p",[t._v("get 请求和 post 请求的区别\n（1）get 请求参数跟在 URL 后进行传递，而 post 请求则是作为 HTTP 消息的实体内容发送给 WEB 服务器。当然，在 ajax 请求中，这种区别对用户是不可见的。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v(" （2）get 请求方式对传输的数据有大小限制（通常不能大于 2KB），而使用 post 方式传递的数据量要比 get 方式大得多（理论上不受限制）。\n\n （3）get 方式请求的数据会被浏览器缓存起来，因此其他人就可以从浏览器的历史记录中读取到这些数据，例如账号和密码等。在某种情况下，get方式会带来严重的安全性问题，而 post 方式相对来说可以避免这些问题。\n\n （4）get 方式和 post 方式传递的数据在服务器端获取也不相同。在 php 中，get 方式的数据可以用 $_GET[] 获取，而 post 方式可以用 $_POST[] 获取。两种方式都可以用 $_REQUEST[] 来获取。\n")])])])]),t._v(" "),s("li",[s("p",[t._v(".load(url,[data],[callback]);")])])]),t._v(" "),s("p",[t._v("将服务器的数据或其他文件的内容加载到调用元素的内容中，如果调用的元素不存在，则不会调用；")]),t._v(" "),s("p",[t._v("常用于加载页面的一个片段，放的一个空标签，往里面填写内容；")]),t._v(" "),s("p",[t._v("url插入地址，callback方法完成后所执行的函数名称；")]),t._v(" "),s("p",[t._v('url地址也可以紧跟空格后写jQuery选择器：$("div").load("1.txt #demo");另一个文件中除了这个选择器外的内容被抛弃；')]),t._v(" "),s("p",[t._v("异步5秒刷新：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#content"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" #content>*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"二、jquery中的jsonp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、jquery中的jsonp"}},[t._v("#")]),t._v(" 二、jQuery中的jsonp")]),t._v(" "),s("p",[t._v("jsonp 是 jQuery 中的跨域处理；")]),t._v(" "),s("ol",[s("li",[t._v("跨域")])]),t._v(" "),s("p",[t._v("跨域概念：a.cn 下面的 js 不能调用 b.cn 中的js。因为 a.cn 和 b.cn是不同域，所以跨域就出现了。")]),t._v(" "),s("p",[t._v("同域的概念：域名、端口、协议相同。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("jQuery 的 jsonp 如何发起跨域请求及其原理")])]),t._v(" "),s("p",[t._v("先准备两个环境：")]),t._v(" "),s("p",[t._v("我们一个用京东的：https://p.3.cn/prices/mgets?skuIds=J_5089253&type=1")]),t._v(" "),s("p",[t._v("另一个用我们本地的环境，这样两个就会产生跨域，直接发起 ajax 请求，如下图 , 浏览器会发出警告")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ‘https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("cn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("prices"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mgets"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("skuIds"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("J_5089253")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("’"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("success")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"http://notecdn.heny.vip/images/jq-05_ajax_%E8%87%AA%E5%AE%9A%E4%B9%89jquery%E6%8F%92%E4%BB%B6-01.png",alt:"image"}}),t._v("\n3. jsonp方式及其原理解析；")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求的 url 地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ‘https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("cn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("prices"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mgets"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("skuIds"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("J_5089253")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("’"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个全局函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 点击时，在 head 中创建一个 script 标签，标签的 src 即我们要跨域的地址，后面跟上 &callback=showData")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'button'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("click")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("‘head’"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('<script src="')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('&callback=showData"><\\/script>')]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("注意：script标签的反斜杠需要转义；")]),t._v(" "),s("p",[t._v("利用script标签可以引用线上script的js文件，没有跨域的限制，当获取跨域数据时，添加一个script标签来跨域请求，地址后面需要带一个callback函数，用来包裹请求到的数据；数据返回到前端后，就是showData(data) 的形式，因为是 script 脚本，所以自动调用全局的 showData 函数，而data 就是 showData 的参数。")]),t._v(" "),s("p",[t._v("这种方式比较麻烦，需要自己写脚本发起请求，然后写个回调函数处理数据，不是很方便。")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("p",[t._v("jQuery 的 jsonp 方式跨域请求")]),t._v(" "),s("p",[t._v("在 jQuery 中，只需配置一个 dataType:'jsonp'，就可以发起一个跨域请求。jsonp指定服务器返回的数据类型为 jsonp 格式，可以看发起的请求路径，自动带了一个callback=xxx，xxx 是 jQuery 随机生成的一个回调函数名称。")]),t._v(" "),s("p",[t._v("注意：jsonp 方式不支持 POST 方式跨域请求，就算指定成 POST 方式，会自动转为 GET 方式；而后端如果设置成 POST 方式了，那就请求不了了；")])])]),t._v(" "),s("h2",{attrs:{id:"三、数据串连化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、数据串连化"}},[t._v("#")]),t._v(" 三、数据串连化")]),t._v(" "),s("p",[t._v("我们用 serialize() 方法和 serializeArray() 两个方法来序列化元素")]),t._v(" "),s("p",[t._v("格式：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("表单 form.serialize();\n\n表单 form.serializeArray();\n")])])]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("form")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("”text”")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("”a”")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("”1”")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("”text”")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("”b”")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("”2”")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("”text”")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("”c”")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("”3”")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("form")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("ol",[s("li",[t._v("$(‘form’).serialize() 返回的是 a=1&b=2&c=3，它其实是把 name 值和 value值用等号连接成一组，用 & 再把每个组连接起来，这样，一个表单的数据，可以很方便的发送给后端。")]),t._v(" "),s("li",[t._v("$(‘form’).serializeArray() 返回的是一个数组数组里的每一项是一个对象，对象里有 name 和 value 两个属性，分别对应 input 的 name 和 value。返回值：[{ name : 'a' , value : '1' },{ name : 'b' , value : '2' },{ name: 'c' , value : '3' }]")])]),t._v(" "),s("h2",{attrs:{id:"四、跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、跨域"}},[t._v("#")]),t._v(" 四、跨域")]),t._v(" "),s("p",[t._v("跨域问题：a.cn去请求b.cn；")]),t._v(" "),s("p",[t._v("解决跨域三种方法：")]),t._v(" "),s("ol",[s("li",[t._v("代理：让服务器代理请求；")]),t._v(" "),s("li",[t._v("XHR2（XMLHTTPREQUESTLevel2）IE10不支持；")]),t._v(" "),s("li",[t._v("jsonP；")])]),t._v(" "),s("p",[t._v("jsonP原理：利用script标签中没有跨域的限制，所以将要请求的地址放到script标签的src中，同时在请求的地址后面添加一个回调函数（&callback=aa），这个aa是自定义一个函数的作用，就是去包裹请求回来的数据，需要在aa函数中写一个形参用来接收请求到的数据；")]),t._v(" "),s("p",[t._v("在使用$.ajax()中，需要在对象里填写dataType，指定值jsonP，回调函数默认使用success函数；")]),t._v(" "),s("p",[t._v("一般用第一种和第三种；")]),t._v(" "),s("p",[t._v("注意：jsonp 方式不支持 POST 方式跨域请求，就算指定成 POST 方式，会自动转为 GET 方式；而后端如果设置成 POST 方式了，那就请求不了了；")]),t._v(" "),s("h2",{attrs:{id:"五、validate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、validate"}},[t._v("#")]),t._v(" 五、validate")]),t._v(" "),s("ol",[s("li",[t._v("操作方法")])]),t._v(" "),s("p",[t._v("一款基于jquery用于验证表单的插件，使用前需要引入jquery文件；")]),t._v(" "),s("p",[t._v("内置验证规则，支持自定义验证规则，简单强大的验证信息提示；")]),t._v(" "),s("p",[t._v("下载地址：https://jqueryvalidation.org/")]),t._v(" "),s("p",[t._v("下载好之后找到解压文件里面的dist/jquery.validate.js,和dist/localization/messages_zh.js；导出这两个文件，并引入；")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v('$("form").validate()；接收的是一个对象；对象的值：')])]),t._v(" "),s("p",[t._v("rules：验证规则，值是一个对象，填写需要验证的内容，里面的键名是form表单的name名；")]),t._v(" "),s("p",[t._v("如果只是简单的规则required这些也可以直接写到标签的class类名里面；")]),t._v(" "),s("p",[t._v("单选项作为键名写到函数对象中，需要写true；")]),t._v(" "),s("p",[t._v("对于radio、checkbox、select选项，需要设置相同的name；")]),t._v(" "),s("p",[t._v("debug : true；表单不提交，进行调试；")]),t._v(" "),s("p",[t._v("messages：提示信息，一个对象，可以修改rule验证的每一项提示信息；键名对应rules的键名，键值填写提示信息；")]),t._v(" "),s("p",[t._v("submitHandler：是一个函数，用来验证成功执行的函数；用于提交事件，form.submit()；")]),t._v(" "),s("p",[t._v("常用的属性：")]),t._v(" "),s("p",[t._v("required    必须输入；")]),t._v(" "),s("p",[t._v('equalTo:"#field"    密码必须一样；')]),t._v(" "),s("p",[t._v("(1) required:true               必输字段")]),t._v(" "),s("p",[t._v('(2) remote:"remote-valid.jsp"   使用ajax方法调用remote-valid.jsp验证输入值')]),t._v(" "),s("p",[t._v("(3) email:true                  必须输入正确格式的电子邮件")]),t._v(" "),s("p",[t._v("(4) url:true                    必须输入正确格式的网址")]),t._v(" "),s("p",[t._v("(5) date:true                   必须输入正确格式的日期，日期校验ie6出错，慎用")]),t._v(" "),s("p",[t._v("(6) dateISO:true                必须输入正确格式的日期(ISO)，例如：2009-06-23，1998/01/22 只验证格式，不验证有效性")]),t._v(" "),s("p",[t._v("(7) number:true                 必须输入合法的数字(负数，小数)")]),t._v(" "),s("p",[t._v("(8) digits:true                 必须输入整数")]),t._v(" "),s("p",[t._v("(9) creditcard:true             必须输入合法的信用卡号")]),t._v(" "),s("p",[t._v('(10) equalTo:"#password"        输入值必须和#password相同')]),t._v(" "),s("p",[t._v("(11) accept:                    输入拥有合法后缀名的字符串（上传文件的后缀）")]),t._v(" "),s("p",[t._v("(12) maxlength:5                输入长度最多是5的字符串(汉字算一个字符)")]),t._v(" "),s("p",[t._v("(13) minlength:10               输入长度最小是10的字符串(汉字算一个字符)")]),t._v(" "),s("p",[t._v('(14) rangelength:[5,10]         输入长度必须介于 5 和 10 之间的字符串")(汉字算一个字符)')]),t._v(" "),s("p",[t._v("(15) range:[5,10]               输入值必须介于 5 和 10 之间")]),t._v(" "),s("p",[t._v("(16) max:5                      输入值不能大于5")]),t._v(" "),s("p",[t._v("(17) min:10                     输入值不能小于10")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("美化提示文字；validate的属性名；")])]),t._v(" "),s("p",[t._v("（1）errorClass：错误时使用的class类名；默认是error；")]),t._v(" "),s("p",[t._v("（2）errorElement：包裹错误文字的标签；默认是label；")]),t._v(" "),s("p",[t._v("（3）success：成功执行的操作，在标签验证通过时触发；")]),t._v(" "),s("p",[t._v("值可以填写一个字符串，这个字符串是一成功的class类名，")]),t._v(" "),s("p",[t._v("也可以填写一个函数，需要传一个形参，函数形参指向成功的标签；")]),t._v(" "),s("p",[t._v("（4）showErrors：验证出错执行的函数；")]),t._v(" "),s("p",[t._v("两个形参，第一个形参指向提示信息对象，第二个形参是一个数组，数组中包含所有验证出错的表单；")]),t._v(" "),s("p",[t._v("函数里面必须填写this.defaultShowErrors()方法；否则看不到提示文字；")]),t._v(" "),s("p",[t._v("因为如果输入错误之后，成功的类名不会删除，所以需要使用这一步删除下一个标签的类名；")]),t._v(" "),s("p",[t._v("（5）errorPlacement：错误元素放置的位置")]),t._v(" "),s("p",[t._v("两个形参（error,element），第一个形参指向错误标签；第二个形参指向错误表单；")]),t._v(" "),s("p",[t._v("默认情况是：error.appendTo(element.parent());即把错误信息放在验证的元素后面。")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("将错误信息放置到统一的容器显示：")])]),t._v(" "),s("p",[t._v("（1）errorContainer：显示或者隐藏验证信息，可以自动实现有错误信息出现时把容器属性变为显示，无错误时隐藏，需要用到将错误信息统一放置的时候使用,值为容器,")]),t._v(" "),s("p",[t._v("（2）errorLabelContainer：把错误信息统一放在一个容器里；jquery选择器；")]),t._v(" "),s("p",[t._v("（3）wrapper：用什么标签再把上边的errorElement包起来；")]),t._v(" "),s("p",[t._v("一般这三个属性同时使用：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("errorContainer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div.container"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nerrorLabelContainer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div.container ul"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nwrapper"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"li"')]),t._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("设置validate默认值；")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDefaults")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("submitHandler")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"提交事件"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"6"}},[s("li",[t._v("自定义添加验证规则")])]),t._v(" "),s("p",[t._v("$.validator.addMethod(name,method,message);")]),t._v(" "),s("p",[t._v("name：规则名字，message：输入错误提示信息；")]),t._v(" "),s("p",[t._v("method：是一个函数，三个形参：value,element,pram；")]),t._v(" "),s("p",[t._v("函数里面写一个正则，之后用正则来验证value并返回")]),t._v(" "),s("p",[t._v("return reg.test(value)；")]),t._v(" "),s("p",[t._v("自定义一个密码验证规则：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"passd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^(?=.*[a-zA-Z])(?=.*[1-9])(?=.*[\\W]).{6,}$/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"密码至少6-32位,且包含数字、字母、符号"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"六、cookie插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、cookie插件"}},[t._v("#")]),t._v(" 六、cookie插件")]),t._v(" "),s("p",[t._v("下载地址：https://github.com/carhartl/jquery-cookie")]),t._v(" "),s("p",[t._v("cookie插件是基于jquery的cookie插件，使用时必须同时引入jquery文件；")]),t._v(" "),s("ol",[s("li",[t._v("设置")])]),t._v(" "),s("p",[t._v("设置：$.cookie(名，值)；")]),t._v(" "),s("p",[t._v("设置有过期时间：$.cookie(名，值，{expires:7})；")]),t._v(" "),s("p",[t._v('设置路径：$.cookie(名，值，{expires:7,path:"/"})；/放在根目录；')]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("获取：")])]),t._v(" "),s("p",[t._v("$.cookie(名)；传入一个名，返回值；")]),t._v(" "),s("p",[t._v("当传入没有的名时，返回undefined；")]),t._v(" "),s("p",[t._v("当不传入参数的时候，返回一个对象；")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("删除")])]),t._v(" "),s("p",[t._v("$.removeCookie(名)；删除；")]),t._v(" "),s("p",[t._v("当有值时，删除返回true，当传入的名没有时，返回false；")]),t._v(" "),s("p",[t._v("当删除一个带路径的，需要把路径也加上，加入路径需要写一个对象；")]),t._v(" "),s("p",[t._v('$.removeCookie("name",{path:"/"})；')]),t._v(" "),s("h2",{attrs:{id:"七、自定义插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、自定义插件"}},[t._v("#")]),t._v(" 七、自定义插件")]),t._v(" "),s("ol",[s("li",[t._v("基于对象的插件；")])]),t._v(" "),s("p",[t._v("$.fn.extend({}),在对象里面写插件；键名键值的方式写函数，取方法时直接点调用；")]),t._v(" "),s("p",[t._v("为了能在函数里面写$符，需要写一个闭包，括号外面写一个")]),t._v(" "),s("p",[t._v("注：写方法时为了能够链式调用需要加个return返回出去；")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("全局插件")])]),t._v(" "),s("p",[t._v("$.extend({})，全局调用：$.方法();")]),t._v(" "),s("p",[t._v(".selector可以和.context一起使用，确定查询的选择器，不是方法，不需要加小括号；")]),t._v(" "),s("p",[t._v(".selector返回选择器里面填写的内容；")]),t._v(" "),s("p",[t._v("在将自定义的方法函数放在js文件时，可以在前后都添加一个分号，避免压缩时出错；")]),t._v(" "),s("h2",{attrs:{id:"八、使用别人的插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、使用别人的插件"}},[t._v("#")]),t._v(" 八、使用别人的插件")]),t._v(" "),s("ol",[s("li",[t._v("去网上搜，下载，下载后的文件，一般都是一个压缩包，也可以是一个文件夹；")]),t._v(" "),s("li",[t._v("引入下载后的css文件；")]),t._v(" "),s("li",[t._v("引入下载后的js文件；")]),t._v(" "),s("li",[t._v("使用f12找到需要的板块，之后复制class类名，查看页面源代码，搜索复制的class类名，复制html中的结构的代码；")]),t._v(" "),s("li",[t._v("复制html中实现功能的代码到页面加载的事件中；\n一般情况在使用插件的时候，测试的时候，先把这个代码直接复制到一个div（一个标签），调整整体的大小，位置，样式，然后直接放在自己的页面的某个位置当中，进行使用；")])]),t._v(" "),s("h2",{attrs:{id:"高频面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高频面试题"}},[t._v("#")]),t._v(" 高频面试题")]),t._v(" "),s("p",[t._v("● 怎么解决跨域问题？")]),t._v(" "),s("p",[t._v("● ajax 的缺点？")]),t._v(" "),s("p",[t._v("● ajax 如何实现异步定时 5 秒刷新？")]),t._v(" "),s("p",[t._v("● 页面编码和被请求的资源编码如果不一致如何处理？")]),t._v(" "),s("p",[t._v("● jquery 中 $.get() 提交和 $.post() 提交有区别吗？")]),t._v(" "),s("p",[t._v("● jquery.extend 与 jquery.fn.extend 的区别？")])])}),[],!1,null,null,null);a.default=e.exports}}]);