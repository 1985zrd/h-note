(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{333:function(t,s,a){"use strict";a.r(s);var n=a(19),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js-14-正则篇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-14-正则篇"}},[t._v("#")]),t._v(" js-14 正则篇")]),t._v(" "),a("h2",{attrs:{id:"一、正则regexp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、正则regexp"}},[t._v("#")]),t._v(" 一、正则RegExp")]),t._v(" "),a("p",[t._v("用特殊的字符组成验证字符串的规则，用来检索或者替换字符串，检测表单输入的信息是否正确，默认只匹配一次；")]),t._v(" "),a("p",[t._v("正则：也叫做规则，让计算机能够读懂人类的规则（正则都是操作字符串的）；")]),t._v(" "),a("p",[t._v("用处：比如注册，邮箱的验证，表单提交等；")]),t._v(" "),a("p",[t._v("Reg  正则    Exp表达式")]),t._v(" "),a("p",[t._v("默认规则：")]),t._v(" "),a("ol",[a("li",[t._v("区分大小写，不区分大小写加标识符  i  ；")]),t._v(" "),a("li",[t._v("默认只匹配一次，全局匹配加标识符g；")]),t._v(" "),a("li",[t._v("解决\\n \\r，不匹配.点的规则，标识符s")]),t._v(" "),a("li",[t._v("根据unicode解析字符(影响\\w)，标识符u")])]),t._v(" "),a("p",[t._v("如果既不区分大小写也不区分一次，则加ig；")]),t._v(" "),a("p",[t._v("正则下面的方法："),a("code",[t._v("exec")]),t._v("、"),a("code",[t._v("test")])]),t._v(" "),a("p",[t._v("字符串下面的方法："),a("code",[t._v("search")]),t._v("、"),a("code",[t._v("match")]),t._v("、"),a("code",[t._v("replace")]),t._v("、"),a("code",[t._v("split")])]),t._v(" "),a("p",[t._v("常用："),a("code",[t._v("test")]),t._v("、"),a("code",[t._v("search")]),t._v("、"),a("code",[t._v("match")]),t._v("、"),a("code",[t._v("replace")]),t._v("；")]),t._v(" "),a("h2",{attrs:{id:"三、创建规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、创建规则"}},[t._v("#")]),t._v(" 三、创建规则")]),t._v(" "),a("p",[t._v("①构造函数创建：new RegExp(表达式，修饰符)；一般用在需要用变量的时候")]),t._v(" "),a("p",[t._v("②字面量创建：/表达式/修饰符  例如:   var a=/**/;")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" re "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("   a为字符串   推荐使用\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" re "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  a为变量\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" re "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   a为字符串\n")])])]),a("h2",{attrs:{id:"四、正常检测方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、正常检测方法"}},[t._v("#")]),t._v(" 四、正常检测方法")]),t._v(" "),a("p",[t._v("检测str中是否有符合reg规则的字符串")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("test()")]),t._v("；reg.test(str)；有返回true，没有返回false；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("exec()")]),t._v("；reg.exec(str)；有返回数组，没有返回null；")])])]),t._v(" "),a("h2",{attrs:{id:"五、修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、修饰符"}},[t._v("#")]),t._v(" 五、修饰符")]),t._v(" "),a("p",[t._v("g：global  全局")]),t._v(" "),a("p",[t._v("i： ignore  case(不区分大小写)；")]),t._v(" "),a("h2",{attrs:{id:"九、正则中的小括号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#九、正则中的小括号"}},[t._v("#")]),t._v(" 九、正则中的小括号")]),t._v(" "),a("ol",[a("li",[t._v("()里面的内容表示捕获分组，()会把每个分组里的匹配结果保存起来，使用$n获取；")]),t._v(" "),a("li",[a("code",[t._v("/(a)(b)(c)\\1\\2\\3/")]),t._v("        \\1代表a和小括号a是一样的内容、\\2代表b，")]),t._v(" "),a("li",[a("code",[t._v("(xyz)+")]),t._v("    匹配至少一个(xyz)，括号表示一体，")]),t._v(" "),a("li",[a("code",[t._v("/a(b|c)d/")]),t._v("   匹配abd,acd；")]),t._v(" "),a("li",[a("code",[t._v("hehe{3}")]),t._v("  是e匹配3次，(hehe){3}，是hehe单词匹配3次；")])]),t._v(" "),a("p",[a("code",[t._v("\\1")]),t._v(" 或 "),a("code",[t._v("$1")]),t._v(" 匹配第一个分组中的内容")]),t._v(" "),a("p",[a("code",[t._v("\\2")]),t._v(" 或 "),a("code",[t._v("$2")]),t._v(" 匹配第二个分组中的内容")]),t._v(" "),a("p",[a("code",[t._v("\\3")]),t._v(" 或 "),a("code",[t._v("$3")]),t._v(" 匹配第三个分组中的内容")]),t._v(" "),a("p",[a("code",[t._v("\\n")]),t._v("只能用在正则表达式中，"),a("code",[t._v("$n")]),t._v("只能用在正则表达式之外的地方；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2018-02-11'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(\\d{4})\\-(\\d{2})\\-(\\d{2})/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$1/$2/$3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '2018/02/11'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'18782832656'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(\\d{3})(\\d{4})(\\d{4})/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$1****$3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abbkejsbcccwqaa'")]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(\\w)\\1*/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['a','bb','k'.....]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断双花括号的内容")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\{\\{(.*)\\}\\}/")]),t._v("\n")])])]),a("p",[a("code",[t._v("reg.test(str)")]),t._v("  // 返回true或false，可以通过RegExp.$1来获取上一次匹配的结果；")]),t._v(" "),a("p",[a("code",[t._v("RegExp.$1")]),t._v("  第一个分组;   获取第一个分组有小括号的分组的匹配结果；")]),t._v(" "),a("p",[t._v("手机中间的*")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'13388889999'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" re "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("   利用函数；\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'****'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("也可以：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"18210399098"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{4}/ig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从第三位开始匹配；")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"****"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"具名组匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具名组匹配"}},[t._v("#")]),t._v(" 具名组匹配")]),t._v(" "),a("p",[t._v("为每组匹配指定名字"),a("code",[t._v("（?<Groupname>）")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" time "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2017-09-11'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/u")]),t._v("\ntime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$<day>/$<month>/$<year>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("groups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出试试")]),t._v("\n")])])]),a("p",[t._v("如果需要具名组引用：使用"),a("code",[t._v("\\k<name>")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<word>[a-z])\\k<word>/")]),t._v("\n")])])]),a("p",[t._v("格式化时间")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(\\d{4})\\D(\\d{2})\\D(\\d{2}).*(\\d{2}):(\\d{2}):(\\d{2})/gi")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$1-$2-$3 $4:$5:$6'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"十、正则中的中括号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十、正则中的中括号"}},[t._v("#")]),t._v(" 十、正则中的中括号")]),t._v(" "),a("p",[t._v("字符类：一组相似的字符，")]),t._v(" "),a("p",[a("code",[t._v("[abc]")]),t._v("整体代表一个字符，内部为或的关系。")]),t._v(" "),a("p",[a("code",[t._v("[^abc]")]),t._v("：排除abc；中括号中使用^，表示排除；")]),t._v(" "),a("p",[a("code",[t._v("[a-z]")]),t._v(": 范围a-z；可以是"),a("code",[t._v("[e-j]")]),t._v("；代表一个字符")]),t._v(" "),a("h2",{attrs:{id:"七、正则中的大括号-量词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七、正则中的大括号-量词"}},[t._v("#")]),t._v(" 七、正则中的大括号(量词)")]),t._v(" "),a("p",[a("code",[t._v("{0,}")]),t._v("  简写"),a("code",[t._v("n*")]),t._v("     匹配零个或多个n")]),t._v(" "),a("p",[a("code",[t._v("{1,}")]),t._v("  简写"),a("code",[t._v("n+")]),t._v("    匹配至少一个n的字符串；")]),t._v(" "),a("p",[a("code",[t._v("{0,1}")]),t._v("简写"),a("code",[t._v("?")]),t._v("     匹配零个或一个n")]),t._v(" "),a("p",[a("code",[t._v("{n}")]),t._v("                    匹配n次")]),t._v(" "),a("p",[a("code",[t._v("{n,m}")]),t._v("                匹配n到m次，需要加边界；")]),t._v(" "),a("p",[a("code",[t._v("{n,}")]),t._v("                   至少匹配n次；")]),t._v(" "),a("p",[t._v("问号：匹配一个或零个，有或没有都能匹配上")]),t._v(" "),a("h2",{attrs:{id:"六、正则中的元字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、正则中的元字符"}},[t._v("#")]),t._v(" 六、正则中的元字符")]),t._v(" "),a("blockquote",[a("p",[t._v("使用特殊字符表示特殊含义")])]),t._v(" "),a("p",[t._v("\\ 转义符，转义表示本身；")]),t._v(" "),a("p",[t._v("需要转义的符号：[ ] { } ( ) . ? * + ^ \\ / | ;")]),t._v(" "),a("p",[t._v("本来这个字符它有自身的意思，但是加上反斜杠就成了另外一个意思；")]),t._v(" "),a("p",[t._v("比如：'anb'，这里表示anb，'a\\nb'  这里表示a换行b；")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("元字符")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("\\s")])]),t._v(" "),a("td",[t._v("空格：（空格、制表符、换行符）")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\S")])]),t._v(" "),a("td",[t._v("非空格")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\d")])]),t._v(" "),a("td",[t._v("数字")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\D")])]),t._v(" "),a("td",[t._v("非数字，同[^0-9]相同")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\w")])]),t._v(" "),a("td",[t._v("字符（字母和数字及下划线）")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\W")])]),t._v(" "),a("td",[t._v("非字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v(".")])]),t._v(" "),a("td",[t._v("除了换行符以外的任意字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("*")])]),t._v(" "),a("td",[t._v("匹配零个或多个n")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("+")])]),t._v(" "),a("td",[t._v("匹配至少一个n的字符串")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("?")])]),t._v(" "),a("td",[t._v("匹配零个或一个n")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("^")])]),t._v(" "),a("td",[t._v("行首匹配")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$")])]),t._v(" "),a("td",[t._v("行尾匹配")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("|")])]),t._v(" "),a("td",[t._v("或者")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\n")])]),t._v(" "),a("td",[t._v("匹配换行符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\r")])]),t._v(" "),a("td",[t._v("匹配回车字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\t")])]),t._v(" "),a("td",[t._v("匹配制表符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\f")])]),t._v(" "),a("td",[t._v("换页符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\b")])]),t._v(" "),a("td",[t._v("匹配一个单词边界，也就是单词和空格间的位置")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\B")])]),t._v(" "),a("td",[t._v("匹配非单词边界，与上一个例子反过来")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("/[\\u4e00-\\u9fa5]/")])]),t._v(" "),a("td",[t._v("匹配汉字")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("匹配非单词边界，与上一个例子反过来；")]),t._v(" "),a("p",[a("code",[t._v("/\\[(.*)\\]/.test(str)")])]),t._v(" "),a("p",[a("code",[t._v("/[a-z0-9]*[\\u4e00-\\u9fa5+/g.exec(this.innerHTML)")]),t._v("     匹配到汉字以及前面的字符；")]),t._v(" "),a("h3",{attrs:{id:"密码限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#密码限制"}},[t._v("#")]),t._v(" 密码限制")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("(?=)")]),t._v(" 零宽断言，表示有；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("(?=.*[a-zA-Z])")]),t._v("  后面必须有一位大写或小写字母")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("(?=.*\\d)")]),t._v(" 后面必须有一位数字")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("(?=.*\\W)")]),t._v(" 后面必须有一个非字母数字及下划线的特殊符号")])])]),t._v(" "),a("p",[t._v("后面必须跟点再写限制量词；")]),t._v(" "),a("p",[a("code",[t._v(".*")]),t._v("    表示匹配除了换行符以外的任意0个或多个；")]),t._v(" "),a("p",[a("strong",[t._v("必须包含字母 数字 及特殊符号，且6位以上")])]),t._v(" "),a("p",[a("code",[t._v("/^(?=.*[a-zA-Z])(?=.*[1-9])(?=.*[\\W]).{6,}$/")]),t._v(" 不能全部是数字或字母或符号")]),t._v(" "),a("p",[t._v("后面的一个点表示匹配一位换行符以外的字符，带了大括号匹配6位即可；")]),t._v(" "),a("p",[a("strong",[t._v("大小写字母 数字 特殊符号 必须包含两种")])]),t._v(" "),a("p",[a("code",[t._v("/^(?![0-9]+$)(?![a-z]+$)(?![A-Z]+$)(?!([^(0-9a-zA-Z)])+$).{6,}$/")])]),t._v(" "),a("p",[a("strong",[t._v("至少有一个并且数字开头")])]),t._v(" "),a("p",[a("code",[t._v("/\\d+[a-z]+/")])]),t._v(" "),a("h3",{attrs:{id:"清除开始结束标签的空格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清除开始结束标签的空格"}},[t._v("#")]),t._v(" 清除开始结束标签的空格")]),t._v(" "),a("p",[a("code",[t._v("/^\\s*|\\s*$/g")]),t._v("；需要添加修饰符；")]),t._v(" "),a("h3",{attrs:{id:"常用正则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用正则"}},[t._v("#")]),t._v(" 常用正则")]),t._v(" "),a("p",[t._v("所有的正则放在一个对象中，用时直接调用，方便管理；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" re "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        phone"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^1\\d{10}$/")]),t._v("\n        qq "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^[1-9][0-9]{4,9}$/")]),t._v("\n        email "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^\\w+@\\w+\\.(com|cn|com.cn|wang|cc|xin|ren|info|xyz|site|club|win|net|org)$/")]),t._v("\n        space "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^\\s*|\\s*$/g")]),t._v("\n        身份证："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("x$"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n        匹配中文："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\\u4e00"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\\u9fa5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("g\n        固话："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n        网址："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zA"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Z")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\\"),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\/[^\\s]+$/")]),t._v("\n        密码："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zA"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Z")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\\"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("W")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        格式化金钱："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\\"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("g\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("/^\\w+@\\w+\\.(com|cn)$/")]),t._v("  匹配邮箱是com或cn的后缀名;")]),t._v(" "),a("p",[t._v("如果要使用，则re.qq ,    re.email;")]),t._v(" "),a("h2",{attrs:{id:"八、正则中字符串的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八、正则中字符串的方法"}},[t._v("#")]),t._v(" 八、正则中字符串的方法")]),t._v(" "),a("h3",{attrs:{id:"replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[t._v("#")]),t._v(" replace")]),t._v(" "),a("p",[a("code",[t._v("字符串.replace(正则,新的字符)")]),t._v("；将正则匹配到的字符更换新字符；")]),t._v(" "),a("ul",[a("li",[t._v("第二个参数也可以是一个函数：函数第一个参数是正则匹配成功的字符，通常是$0,\n"),a("ul",[a("li",[t._v("函数的参数：\n"),a("ul",[a("li",[t._v("第一个参数为匹配成功的字符$0;")]),t._v(" "),a("li",[t._v("第二个参数：正则的第一个小括号$1；")]),t._v(" "),a("li",[t._v("第三个参数：正则的第二个小括号$2；以此类推；")])])])])])]),t._v(" "),a("p",[t._v("例子：分组操作，匹配子项；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2019-4-17'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" re "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(\\d+)(-)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("     \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//$0匹配成功的字符，$1匹配第一个小括号（子项）的，$2匹配第二个小括号（子项）；")]),t._v("\n    $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//为第二个小括号的匹配项，为-，可以修改这个项；")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("str配合正则使用，正则加g，有多少个则替换多少个，如果正则加了g，使用这个方法和forEach是一样的；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例子1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"北京，新疆，湖南，黑龙江，乌鲁木齐"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/北京|黑龙江|乌鲁木齐/g")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" aa "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//循环替换里面的关键字  相当于执行了3遍")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" stm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//循环文字的长度，将reg替换掉；")]),t._v("\n        stm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" stm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// **，黑龙江，新东方，****，西藏")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例子2 转换驼峰命名法;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" toCameLize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/-(\\w)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ab"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ef"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// abCdEf;")]),t._v("\n")])])]),a("h3",{attrs:{id:"split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#split"}},[t._v("#")]),t._v(" split")]),t._v(" "),a("p",[a("code",[t._v("str.split(reg)")]),t._v("；以符合正则的内容分割，第二个参数可选的，新数组的长度；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2019-4-17 15:25:25'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" re "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/-|\\s|:/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    以"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("或\\s或：分隔；\n")])])]),a("h3",{attrs:{id:"match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[t._v("#")]),t._v(" match")]),t._v(" "),a("blockquote",[a("p",[t._v("如果有就返回数组，没有就返回null；默认只匹配一次，匹配多次可以加g")])]),t._v(" "),a("p",[a("code",[t._v("str.match(reg)")]),t._v("；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123hdsajkfd4355jkdslaf888"')]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//默认查找一次   g查找全部")]),t._v("\n输出之后：ary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("‘"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("’"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4355")]),t._v("‘"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("’"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("888")]),t._v("‘"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输入全部数字；")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'book'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'slice'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dlick'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/oo/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#search"}},[t._v("#")]),t._v(" search")]),t._v(" "),a("blockquote",[a("p",[t._v("返回第一次出现的下标；如果没有，则返回-1；像字符串的indexOf()")])]),t._v(" "),a("p",[a("code",[t._v("字符串.search(reg)")]),t._v("；")]),t._v(" "),a("h3",{attrs:{id:"lastindex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lastindex"}},[t._v("#")]),t._v(" lastIndex")]),t._v(" "),a("blockquote",[a("p",[t._v("纪录下一次要查找的位置的下标")])]),t._v(" "),a("p",[a("code",[t._v("正则.lastIndex")]),t._v("；")]),t._v(" "),a("p",[t._v("查找完为null之后从0开始，用正则调用，需要配合修饰符g；如果前面为1，则下一次为2；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"18210399098"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{4}/ig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从第三位开始匹配；")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"****"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("小方法：正则里面放变量，可以这样：search(eval("),a("code",[t._v("/${this.val}/g")]),t._v("))；")]),t._v(" "),a("h2",{attrs:{id:"九、高级用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#九、高级用法"}},[t._v("#")]),t._v(" 九、高级用法")]),t._v(" "),a("h3",{attrs:{id:"前瞻-、后顾-、负前瞻-、负后顾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前瞻-、后顾-、负前瞻-、负后顾"}},[t._v("#")]),t._v(" 前瞻(?=)、后顾(?<=)、负前瞻(?!)、负后顾(?<!)")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前瞻:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" e后边是f就匹配  f不会放进结果里"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("则会放进结果里"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 负前瞻:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" e后边不是f就匹配   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("f  将"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("换成"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("  则为取非"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后顾:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("e e前面是f就匹配\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 负后顾:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("e e前面不是f就匹配\n")])])]),a("p",[a("strong",[t._v("例子")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123ab'")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+(?=ab)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123   ab不会放进结果里")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+(?:ab)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123ab  ab会放进结果里")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+(?!bc)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//123   后面不能是bc;")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<=\\d)[a-z]+/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ab   匹配紧跟着数字后的字母;")]),t._v("\n")])])]),a("p",[a("strong",[t._v("组合使用")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配字母之间的数字；")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'qee132ab'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<=[a-z]+)\\d+(?=[a-z]+)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  ?=匹配为ab的;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//["132", index: 3, input: "qee132ab", groups: undefined]')]),t._v("\n")])])]),a("h3",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" ?:")]),t._v(" "),a("p",[t._v("理解?:需要理解捕获分组和非捕获分组的概念")]),t._v(" "),a("p",[a("code",[t._v("()")]),t._v("表示捕获分组，()会把每个分组里的匹配的值保存起来，使用$n(n是一个数字，表示第n个捕获组的内容)")]),t._v(" "),a("p",[a("code",[t._v("(?:)")]),t._v("表示非捕获分组，和捕获分组唯一的区别在于，非捕获分组匹配的值不会保存起来")]),t._v(" "),a("p",[t._v("例子：格式化金钱")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配的是后面3*n个数字的非单词边界(\\B)")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12345678'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\B(?=(?:\\d{3})+(?!\\d))/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 原理解析: \n * 查找3n正整数和1个非数字, 8后面没有数字了, 因此需要加一个非数字\n * 其实不加?:也行,但大多数加上\n */")]),t._v("\n")])])]),a("h3",{attrs:{id:"-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[t._v("#")]),t._v(" .*")]),t._v(" "),a("p",[a("code",[t._v("(.*)")]),t._v("    匹配直到后面条件的最后一个；")]),t._v(" "),a("p",[a("code",[t._v("(.*?)")]),t._v("   匹配到后面条件下一个符合条件；")]),t._v(" "),a("h3",{attrs:{id:"贪婪模式与非贪婪模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#贪婪模式与非贪婪模式"}},[t._v("#")]),t._v(" 贪婪模式与非贪婪模式")]),t._v(" "),a("p",[a("strong",[t._v("贪婪模式")]),t._v(" ：正则表达式在匹配的时候默认会尽可能多的匹配")]),t._v(" "),a("p",[a("strong",[t._v("非贪婪模式")]),t._v(" ：通过在限定符后加?叫非贪婪匹配；")]),t._v(" "),a("p",[t._v("比如：\\d{3,6}默认匹配6个数字而不是3个，\\d{3,6}?，匹配三次；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abbbb'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/ab+/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//则结果是'-';")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abbbb'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/ab+?/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 则结果是'-bbb';")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 大家好,我叫{{name}},今年{{age}}岁")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我叫{{直到}}岁;   贪婪模式匹配到结尾;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/{{(.*?)}}/")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我叫{{}},今年{{}}岁;  添加?开启非贪婪模式;")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);