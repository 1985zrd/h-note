(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{453:function(t,s,a){"use strict";a.r(s);var e=a(19),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" git")]),t._v(" "),a("h2",{attrs:{id:"一、配置ssh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、配置ssh"}},[t._v("#")]),t._v(" 一、配置ssh")]),t._v(" "),a("ol",[a("li",[t._v("设置user name和email")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'heny'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'heny@qq.com'")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("生成SSH密钥过程")])]),t._v(" "),a("p",[t._v("（1）查看是否已经有了ssh密钥：cd ~/.ssh")]),t._v(" "),a("p",[t._v("路径：c:/用户/Administrator/.ssh   删除.ssh下面的所有文件")]),t._v(" "),a("p",[t._v("（2）生成密钥")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("ssh-keygen -t rsa -C "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'heny@qq.com'")]),t._v("   // 回车之后记得根据提示按下yes\n")])])]),a("p",[t._v("注意：如果提示ssh-keygen不是内部命令或者其他的报错，则需要以下配置")]),t._v(" "),a("p",[t._v("找到git/usr/bin目录下的ssh-keygen.exe，之后配置到Path环境变量;")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://notecdn.heny.vip/images/git-01.png",alt:"image-20200412204637296"}})]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("生成密钥之后就可以去官网绑定了")])]),t._v(" "),a("h2",{attrs:{id:"二、项目初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、项目初始化"}},[t._v("#")]),t._v(" 二、项目初始化")]),t._v(" "),a("ol",[a("li",[t._v("在git官网新建一个git仓库之后；")])]),t._v(" "),a("p",[t._v("如果没有使用readme初始化，执行以下四步")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加当前项目文件夹下的所有文件， 如果是./*则是当前文件夹下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'描述'")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 给文件添加备注")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin 地址    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加远程仓库地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把本地添加的文件上传到git;")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("如果使用了readme初始化；")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone 地址  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 克隆只需要操作一次")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("当修改了文件之后想要上传代码")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'添加描述'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])])]),a("p",[t._v("如果git pull拉下来的代码有冲突则需要先解决冲突问题，解决之后需要再次git add 重复第一二次，如果没有则直接git push")]),t._v(" "),a("p",[t._v("注意：push失败的情况")]),t._v(" "),a("p",[t._v("（1）文件为空")]),t._v(" "),a("p",[t._v("（2）创建文件之后没有commit")]),t._v(" "),a("h2",{attrs:{id:"三、分支操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、分支操作"}},[t._v("#")]),t._v(" 三、分支操作")]),t._v(" "),a("h3",{attrs:{id:"分支常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支常用命令"}},[t._v("#")]),t._v(" 分支常用命令")]),t._v(" "),a("p",[a("code",[t._v("git branch")]),t._v(" 查看本地分支")]),t._v(" "),a("p",[a("code",[t._v("git branch -a")]),t._v(" 查看远程分支")]),t._v(" "),a("p",[a("code",[t._v("git branch -vv")]),t._v(" 查看本地分支写远程分支的对比")]),t._v(" "),a("p",[a("code",[t._v("git checkout <branch>")]),t._v(" 切换到一个分支")]),t._v(" "),a("p",[a("code",[t._v("git checkout -b <branch>")]),t._v(" 创建一个新分支")]),t._v(" "),a("p",[a("code",[t._v("git checkout -b dev origin/dev")]),t._v("  切换到一个新的分支，并追踪到远程分支上；")]),t._v(" "),a("p",[a("code",[t._v("git push <远程仓库> <本地分支>:<远程分支>")]),t._v("  将本地分支推送到远程分支")]),t._v(" "),a("p",[a("code",[t._v("git push --set-upstream origin <分支>")]),t._v("  将本地新分支推到远程")]),t._v(" "),a("p",[a("code",[t._v("git fetch")]),t._v(" 更新本地代码")]),t._v(" "),a("p",[a("code",[t._v("git merge master")]),t._v(" 合并master内容")]),t._v(" "),a("h3",{attrs:{id:"清理本地分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清理本地分支"}},[t._v("#")]),t._v(" 清理本地分支")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote show origin\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote prune origin\n")])])]),a("h3",{attrs:{id:"删除分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),a("blockquote",[a("p",[t._v("删除不能删除远程的分支")])]),t._v(" "),a("p",[t._v("（1）删除单个分支")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -D dev\n")])])]),a("p",[t._v("（2）批量删除：删除除去master分支：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" -v "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("xargs")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -D\n")])])]),a("h3",{attrs:{id:"常见分支问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见分支问题"}},[t._v("#")]),t._v(" 常见分支问题")]),t._v(" "),a("ol",[a("li",[t._v("在非目的分支上做了修改，想切换回目的分支")])]),t._v(" "),a("p",[t._v("（1）无论有没有添加到暂存区都行（暂存区就是有commit代码）")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b new_branch "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 建立临时分支, 这样改动会被带到新分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保存在栈区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout 目标分支\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将代码拉下来, 避免解决冲突")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将栈区内容取出放到当前分支")]),t._v("\n")])])]),a("p",[t._v("（2）已提交到本地仓库")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD^ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤销最近一次提交")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("ignoring broken ref refs问题\n"),a("ul",[a("li",[t._v("找到.git目录下refs/remotes/origin目录（子模块的这个目录是在主模块的.git目录下，因为子模块没有.git目录）")]),t._v(" "),a("li",[t._v("删除里面的HEAD文件或者所有文件")]),t._v(" "),a("li",[t._v("然后运行git fetch –all")])])])]),t._v(" "),a("h2",{attrs:{id:"四、暂存操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、暂存操作"}},[t._v("#")]),t._v(" 四、暂存操作")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("为什么需要暂时：")]),t._v(" "),a("ul",[a("li",[t._v("（1）当我们写代码时，发现写错分支了，此时需要将代码保存到暂存区，切换到正确的分支再拉下来")]),t._v(" "),a("li",[t._v("（2）当我们修改了一些文件时，想查看修改的文件是否造成了其他问题，可以先保存在暂存区，测试完再拉下来")])])]),t._v(" "),a("li",[a("p",[t._v("基础使用")])])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交到暂存区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拉下来")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("常用的git stash命令")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git stash save 'message'")]),t._v("：执行存储时，添加备注，方便查找，git stash不方便查找")]),t._v(" "),a("li",[a("code",[t._v("git stash list")]),t._v(" ：查看stash了哪些存储")]),t._v(" "),a("li",[a("code",[t._v("git stash show")]),t._v(" ：显示做了哪些改动，默认show第一个存储，")]),t._v(" "),a("li",[a("code",[t._v("git stash show stash@{1}")]),t._v(" ： 显示第一个修改文件")]),t._v(" "),a("li",[a("code",[t._v("git stash apply")]),t._v(" ： 应用某个存储，但不会把存储从存储列表中删除，默认使用第一个")]),t._v(" "),a("li",[a("code",[t._v("git stash apply stash@{1}")]),t._v(" ：应用第一个")]),t._v(" "),a("li",[a("code",[t._v("git stash pop")]),t._v(" ： 命令恢复之前的缓存工作目录，将缓存堆栈中的对应stash删除")]),t._v(" "),a("li",[a("code",[t._v("git stash pop stash@{1}")]),t._v("  ：应用指定的stash")]),t._v(" "),a("li",[a("code",[t._v("git stash drop stash@{1}")]),t._v(" ：丢弃第几个存储，从列表中删除这个存储")]),t._v(" "),a("li",[a("code",[t._v("git stash clear")]),t._v(" ： 删除所有缓存的stash；")])]),t._v(" "),a("p",[t._v("注意：新增的文件，直接执行"),a("code",[t._v("stash")]),t._v("是不会被存储的，如果有新增文件的时候，需要首先执行git add添加新文件到git库中，不需要提交和"),a("code",[t._v("commit")]),t._v("，然后再执行"),a("code",[t._v("git stash")]),t._v("即可；")]),t._v(" "),a("h2",{attrs:{id:"五、用户管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、用户管理"}},[t._v("#")]),t._v(" 五、用户管理")]),t._v(" "),a("p",[a("code",[t._v("git config --list")]),t._v("   查看git配置")]),t._v(" "),a("p",[a("code",[t._v("git status")]),t._v("  查看文件add的状态，以及远程是否有更新")]),t._v(" "),a("h2",{attrs:{id:"六、回退版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、回退版本"}},[t._v("#")]),t._v(" 六、回退版本")]),t._v(" "),a("p",[a("code",[t._v("git log")]),t._v("  #  获取版本id")]),t._v(" "),a("p",[a("code",[t._v("git reset --hard id")]),t._v("   # 回退本地代码库")]),t._v(" "),a("p",[a("code",[t._v("git push -f -u origin master")]),t._v("  推送到远程服务器")]),t._v(" "),a("p",[a("code",[t._v("git pull")]),t._v("   重新拉取代码；")]),t._v(" "),a("h2",{attrs:{id:"七、git常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七、git常见问题"}},[t._v("#")]),t._v(" 七、git常见问题")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("描述出错，怎么修改描述")]),t._v(" "),a("p",[t._v("（1）通过git log找到上一个提交的commit_id")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://notecdn.heny.vip/images/git-02.png",alt:"image"}})]),t._v(" "),a("p",[t._v("（2）通过：git reset --soft commit_id，执行一遍，之后就可以重新git commit了；")])]),t._v(" "),a("li",[a("p",[t._v("项目名字被修改，地址被更换")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第一种")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url origin url "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新设置远程地址")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第二种")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" origin "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除跟踪远程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin url "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新配置远程地址")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"八、git统计代码量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八、git统计代码量"}},[t._v("#")]),t._v(" 八、git统计代码量")]),t._v(" "),a("p",[t._v("修改since开始日期，和until到什么日期，如果不修改则是至今")]),t._v(" "),a("p",[t._v("如果单独查询某个用户，修改$name为用户邮箱")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --format"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%aN'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" -u "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -en "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),a("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[t._v("\\t")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --author"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v('"')]),t._v(" --pretty"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tformat: --since "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-03-30 --until"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-04-02 --numstat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{ add += "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("; subs += "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v("; loc += "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" - "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v(' } END { printf "added lines: %s, removed lines: %s, total lines: %s'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("\", add, subs, loc }'")]),t._v(" -"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("--since 限制显示输出的范围")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("--since")]),t._v(", "),a("code",[t._v("--after")]),t._v(" 仅显示指定时间之后的提交")]),t._v(" "),a("li",[a("code",[t._v("--until")]),t._v(", "),a("code",[t._v("--before")]),t._v("  仅显示指定时间之前的提交")]),t._v(" "),a("li",[a("code",[t._v("--author")]),t._v(" 仅显示指定作者相关的提交")])]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git log --until=1.minute.ago")]),t._v(" // 一分钟之前的所有log")]),t._v(" "),a("li",[a("code",[t._v("git log --since=1.day.ago")]),t._v(" // 一天之内的log")]),t._v(" "),a("li",[a("code",[t._v("git log --since=1.month.age --until=2.weeks.age")]),t._v(" // 一个月之前到半月之前的log")])]),t._v(" "),a("p",[t._v("指定时间")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --format"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%aN'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" -u "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -en "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),a("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[t._v("\\t")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --author"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v('"')]),t._v(" --pretty"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tformat: --since "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020-04-02 00:00:00'")]),t._v(" --until"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020-04-02 23:59:59'")]),t._v(" --numstat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{ add += "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("; subs += "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v(";  loc += "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" - "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v(' } END { printf "added lines: %s, removed lines: %s, total lines: %s'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("\", add, subs, loc }'")]),t._v(" -"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("h2",{attrs:{id:"九、git其他操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#九、git其他操作"}},[t._v("#")]),t._v(" 九、git其他操作")]),t._v(" "),a("p",[t._v("在一行查看提交日志："),a("code",[t._v("git log --oneline --decorate --graph")])]),t._v(" "),a("h2",{attrs:{id:"十、vscode操作git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十、vscode操作git"}},[t._v("#")]),t._v(" 十、vscode操作git")]),t._v(" "),a("h3",{attrs:{id:"vscode配置git环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vscode配置git环境"}},[t._v("#")]),t._v(" vscode配置git环境")]),t._v(" "),a("p",[t._v("终端直接使用git方式，带有颜色")]),t._v(" "),a("p",[t._v("（1）将以下代码添加到vscode设置里面")]),t._v(" "),a("p",[t._v("路径：点击小齿轮--\x3e设置--\x3e点击以json文件编辑，并添加进去;")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"terminal.integrated.shell.windows"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C:\\\\Program Files\\\\Git\\\\bin\\\\bash.exe"')]),t._v("\n")])])]),a("p",[t._v("（2）之后按ctrl+`  可以打开终端;")]),t._v(" "),a("p",[t._v("输入cmd可以转回原生的cmd终端")]),t._v(" "),a("p",[t._v("输入bash可以转回git终端;")]),t._v(" "),a("h3",{attrs:{id:"vscode文件后面的字母意思"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vscode文件后面的字母意思"}},[t._v("#")]),t._v(" vscode文件后面的字母意思")]),t._v(" "),a("p",[t._v("A: 你本地新增的文件（服务器上没有）.")]),t._v(" "),a("p",[t._v("C: 文件的一个新拷贝.")]),t._v(" "),a("p",[t._v("D: 你本地删除的文件（服务器上还在）.")]),t._v(" "),a("p",[t._v("M: 文件的内容或者mode被修改了.")]),t._v(" "),a("p",[t._v("R: 文件名被修改了。")]),t._v(" "),a("p",[t._v("T: 文件的类型被修改了。")]),t._v(" "),a("p",[t._v("U: 文件没有被合并(你需要完成合并才能进行提交)。")]),t._v(" "),a("p",[t._v("X: 未知状态(很可能是遇到git的bug了，你可以向git提交bug report)。")]),t._v(" "),a("h3",{attrs:{id:"vscode上传代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vscode上传代码"}},[t._v("#")]),t._v(" vscode上传代码")]),t._v(" "),a("ol",[a("li",[t._v("点击分支")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://notecdn.heny.vip/images/git-03.png",alt:"image"}})]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("点击对勾，之后弹出提示框，提示输入commit")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://notecdn.heny.vip/images/git-04.png",alt:"image"}})]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("点击推送，或者推送到（会提示选择分支）；")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://notecdn.heny.vip/images/git-05.png",alt:"image"}})]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("之后去git里面查看是否已经提交了代码；")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://notecdn.heny.vip/images/git-06.png",alt:"image"}})]),t._v(" "),a("h3",{attrs:{id:"vscode切换分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vscode切换分支"}},[t._v("#")]),t._v(" vscode切换分支")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://notecdn.heny.vip/images/git-07.png",alt:"image"}})]),t._v(" "),a("h3",{attrs:{id:"vscode插件：gitlens"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vscode插件：gitlens"}},[t._v("#")]),t._v(" vscode插件：gitlens")]),t._v(" "),a("p",[t._v("使用gitlens使开发更方便，代码管理更容易")]),t._v(" "),a("ol",[a("li",[t._v("搜索：gitlens  并安装，之后在每一行代码后面可以清晰的看见")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://notecdn.heny.vip/images/git-08.png",alt:"image"}})]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("侧边栏工具使用")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://notecdn.heny.vip/images/git-09.png",alt:"image"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"http://notecdn.heny.vip/images/git-10.png",alt:"image"}})]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("右上角实时对比分支修改内容")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://notecdn.heny.vip/images/git-11.png",alt:"image"}})])])}),[],!1,null,null,null);s.default=n.exports}}]);