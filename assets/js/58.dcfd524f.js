(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{366:function(t,s,a){"use strict";a.r(s);var n=a(19),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ts-08-声明文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts-08-声明文件"}},[t._v("#")]),t._v(" TS-08 声明文件")]),t._v(" "),a("p",[a("strong",[t._v("为什么需要声明文件")])]),t._v(" "),a("p",[t._v("当引入了全局的库之后，比如"),a("code",[t._v("jQuery")]),t._v("库，会在"),a("code",[t._v("ts")]),t._v("文件中使用"),a("code",[t._v("$")]),t._v("符，在"),a("code",[t._v("ts")]),t._v("文件中直接使用是会提示找不到文件的，是因为没有声明文件；")]),t._v(" "),a("p",[a("strong",[t._v("声明文件的查找")])]),t._v(" "),a("p",[t._v("可以在"),a("code",[t._v("tsconfig.json")]),t._v("文件中，添加"),a("code",[t._v("include")]),t._v("字段，配置声明文件的路径，如果不配置，则会查找所有文件夹下面的"),a("code",[t._v(".d.ts")]),t._v("文件；")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"include"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./scr/**/*.ts"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 代表src下面某个文件夹下面的声明文件")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/**/*.d.ts"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("声明文件使用"),a("code",[t._v("declare")]),t._v("关键字来声明文件；")]),t._v(" "),a("p",[a("strong",[t._v("查看声明文件")])]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("ts")]),t._v("中，大多数库都被社区编写了声明文件，在"),a("code",[t._v("node_modules")]),t._v("找到安装的库，之后查看"),a("code",[t._v("*.d.ts")]),t._v("文件，里面就是写好的声明文件，如果没有，则需要手动安装，安装时加上"),a("code",[t._v("@types/*")]),t._v("即可，如果安装成功了，说明有这个库的声明文件，如果找不到安装的模块，则需要手动编写声明文件；")]),t._v(" "),a("h2",{attrs:{id:"全局库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局库"}},[t._v("#")]),t._v(" 全局库")]),t._v(" "),a("p",[t._v("如何判断是否是全局可以使用的变量：")]),t._v(" "),a("p",[t._v("官方声明文件的例子："),a("a",{attrs:{href:"https://www.tslang.cn/docs/handbook/declaration-files/templates.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方模块"),a("OutboundLink")],1),t._v("，可以参考"),a("code",[t._v("global.d.ts")]),t._v("文件的例子；")]),t._v(" "),a("p",[t._v("通过定义"),a("code",[t._v("document")]),t._v("或者"),a("code",[t._v("window")]),t._v("上面添加方法时，都是全局可以使用的变量")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果添加了一个全局的getTitle方法，并且返回的是string, 当声明了之后则可以使用了;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTitle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n")])])]),a("p",[t._v("当修改了声明文件时，需要重新编译，否则报错；")]),t._v(" "),a("h2",{attrs:{id:"模块化库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化库"}},[t._v("#")]),t._v(" 模块化库")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("import")]),t._v("语句或者"),a("code",[t._v("require")]),t._v("语句的，一般都是模块化库")]),t._v(" "),a("p",[t._v("可以参数官方的"),a("code",[t._v("module-*.d.ts")]),t._v("的模板；")]),t._v(" "),a("h2",{attrs:{id:"umd库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#umd库"}},[t._v("#")]),t._v(" UMD库")]),t._v(" "),a("p",[a("em",[t._v("UMD")]),t._v("模块是指那些既可以作为模块使用（通过导入）又可以作为全局（在没有模块加载器的环境里）使用的模块。")]),t._v(" "),a("p",[a("strong",[t._v("识别UMD模块")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" factory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" define "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"function"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" define"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"libName"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" module "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("factory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"libName"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("returnExports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("factory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("libName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n")])])]),a("p",[t._v("很多库都是"),a("code",[t._v("UMD")]),t._v("库，比如"),a("code",[t._v("jquery")]),t._v("、"),a("code",[t._v("moment")])]),t._v(" "),a("h2",{attrs:{id:"修改全局模块编写声明文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改全局模块编写声明文件"}},[t._v("#")]),t._v(" 修改全局模块编写声明文件")]),t._v(" "),a("p",[t._v("一个"),a("em",[t._v("全局插件")]),t._v("是全局代码，它们会改变全局对象的结构。 对于 "),a("em",[t._v("全局修改的模块")]),t._v("，在运行时存在冲突的可能。")]),t._v(" "),a("p",[t._v("当我们在"),a("code",[t._v("String")]),t._v("、"),a("code",[t._v("Array")]),t._v("等原型上面添加了方法时，如何填写声明文件")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getFirstLetter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// global.d.ts 写声明文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 利用声明合并")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFirstLetter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"使用依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用依赖"}},[t._v("#")]),t._v(" 使用依赖")]),t._v(" "),a("p",[a("strong",[t._v("依赖全局库")])]),t._v(" "),a("p",[t._v("如果库依赖了某个全局库，使用"),a("code",[t._v("reference")]),t._v("指定"),a("code",[t._v("types")]),t._v("来引入该模块")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// <reference types='moment'/>")]),t._v("\n")])])]),a("p",[a("strong",[t._v("依赖模块")])]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("import")]),t._v("语句")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" moment "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"moment"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("依赖UMD库")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果你的全局库依赖于某个UMD模块，使用"),a("code",[t._v("/// <reference types")]),t._v("指令：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <reference types="moment" />')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getThing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" moment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("如果你的模块或UMD库依赖于一个UMD库，使用"),a("code",[t._v("import")]),t._v("语句：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" someLib "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'someLib'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("不要使用"),a("code",[t._v("///reference")]),t._v("引入")])])]),t._v(" "),a("p",[a("strong",[t._v("注意：")])]),t._v(" "),a("ol",[a("li",[t._v("防止命名冲突，因为都是在全局填写的，很容易产生冲突，建议将相关的东西放在命名空间里面，使用对象的形式去访问，防止命名污染")]),t._v(" "),a("li",[t._v("一些插件添加或修改已存在的顶层模块的导出部分。 当然这在CommonJS和其它加载器里是允许的，ES模块被当作是不可改变的因此这种模式就不可行了。 因为TypeScript是能不预知加载器类型的，所以没没在编译时保证，但是开发者如果要转到ES6模块加载器上应该注意这一点。")])]),t._v(" "),a("h2",{attrs:{id:"快捷外部模块声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快捷外部模块声明"}},[t._v("#")]),t._v(" 快捷外部模块声明")]),t._v(" "),a("p",[t._v("如果使用一个新模块，不想花时间精力为该模块填写声明，只需要在"),a("code",[t._v("typing")]),t._v("文件夹下面创建文件夹编写即可，比如"),a("code",[t._v("moment")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// typings/moment/index.d.ts")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'moment'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//快速导出模块")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);