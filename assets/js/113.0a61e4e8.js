(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{422:function(t,a,s){"use strict";s.r(a);var r=s(19),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"jq-01-什么是jquery"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jq-01-什么是jquery"}},[t._v("#")]),t._v(" jq-01 什么是jQuery")]),t._v(" "),s("h2",{attrs:{id:"一、什么是jquery"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是jquery"}},[t._v("#")]),t._v(" 一、什么是jQuery")]),t._v(" "),s("p",[t._v("​\tjQuery 是一个优秀的 JavaScript 库，是一个由 John Resig 创建于 2006 年 1 月的开源项目。现在的 jQuery 团队主要包括核心库、UI、插件和 jQuery Mobile 等开发人员以及推广和网站设计、维护人员。")]),t._v(" "),s("p",[t._v("​    jQuery 凭借简洁的语法和跨平台的兼容性，极大地简化了 JavaScript 开发人员遍历HTML 文档、操作DOM、处理事件、执行动画和开发 ajax 的操作。总之，无论是网页设计师、后台开发者、业余爱好者还是项目管理者，也无论是 JavaScript 初学者还是 JavaScript高手，都有足够多的理由去学习 jQuery。")]),t._v(" "),s("h2",{attrs:{id:"二、jquery的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、jquery的优点"}},[t._v("#")]),t._v(" 二、jQuery的优点")]),t._v(" "),s("p",[t._v("jQuery强调的理念是写得少，做得多（write less, do more），jQuery独特的选择器、链式操作、事件处理机制和封装完善的 ajax 都是其他库望尘莫及的。概括起来，jQuery有以下优势。")]),t._v(" "),s("ol",[s("li",[t._v("轻量级。")]),t._v(" "),s("li",[t._v("强大的选择器。")]),t._v(" "),s("li",[t._v("出色的 DOM 操作的封装。")]),t._v(" "),s("li",[t._v("可靠的事件处理机制。")]),t._v(" "),s("li",[t._v("完善的 ajax。")]),t._v(" "),s("li",[t._v("不污染顶级变量。")]),t._v(" "),s("li",[t._v("出色的浏览器兼容性。")]),t._v(" "),s("li",[t._v("链式操作方式。")]),t._v(" "),s("li",[t._v("隐式迭代。")]),t._v(" "),s("li",[t._v("行为层和结构层分离。")]),t._v(" "),s("li",[t._v("丰富的插件支持。")]),t._v(" "),s("li",[t._v("完善的文档。")]),t._v(" "),s("li",[t._v("开源。")])]),t._v(" "),s("h2",{attrs:{id:"三、下载jquery"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、下载jquery"}},[t._v("#")]),t._v(" 三、下载jQuery")]),t._v(" "),s("ol",[s("li",[t._v("去官方网站下载：http://jquery.com/")]),t._v(" "),s("li",[t._v("去 CDN 下载：https://www.bootcdn.cn/jquery/")])]),t._v(" "),s("h2",{attrs:{id:"四、jquery-库类型说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、jquery-库类型说明"}},[t._v("#")]),t._v(" 四、jQuery 库类型说明")]),t._v(" "),s("p",[t._v("jQuery库的类型分为两种，分别是生产版本（最小化和压缩版）和开发版（未压缩版），")]),t._v(" "),s("p",[t._v("它们的区别是：")]),t._v(" "),s("p",[t._v("​\t开发版：完整无压缩版本，主要用于测试、学习、和开发；")]),t._v(" "),s("p",[t._v("​\t生产版：经过工具压缩或经过服务器开启 Gzip 压缩，主要应用于产品和项目；")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://notecdn.heny.vip/images/jq-01_%E4%BB%80%E4%B9%88%E6%98%AFjQuery-01.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"五、jquery版本："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、jquery版本："}},[t._v("#")]),t._v(" 五、jQuery版本：")]),t._v(" "),s("p",[t._v("jQuery 库分为 1.x 的版本和 2.x、3.x 的版本，1.x 的版本兼容 IE678，而 2.x、3.x的版本不兼容 IE678。")]),t._v(" "),s("p",[t._v("国内多数网站还在使用1.x的版本")]),t._v(" "),s("h2",{attrs:{id:"六、引入方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、引入方式"}},[t._v("#")]),t._v(" 六、引入方式")]),t._v(" "),s("p",[t._v("jQuery 不需要安装，他就是一个 js 文件，把下载的 jQuery 放到一个公共的位置，想要在某个页面上使用 jQuery 时，只需要在相关的 HTML 文档中引入该库文件即可。")]),t._v(" "),s("p",[t._v("一般可以放在 head 标签中或者 "),t._v(" 标签前面，但是一定要注意，要在其它 js 文件前面引入 jQuery 库。")]),t._v(" "),s("p",[t._v("当我们需要使用 jQuery 的时候，会在 HTML 文档中引入 jquery.js, 可以通过以下两种方式引入：")]),t._v(" "),s("p",[t._v("● CDN 引入（CDN 的全称是 Content Delivery Network，即内容分发网络）\n● 本地 jQuery 文件引入")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 方式一：引入 CDN 服务 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("”https://cdn.bootcss.com/jquery/1.7.1/jquery.min.js”")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 方式二：引用本地文件 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- <script src=”js/jquery.min.js”><\/script> --\x3e")]),t._v("\n")])])]),s("p",[t._v("注：引入jquery必须放在所有其他script标签之前；")]),t._v(" "),s("p",[t._v("jquery中2.0以上的版本不兼容ie6,7,8；")]),t._v(" "),s("h2",{attrs:{id:"七、jquery与-的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、jquery与-的关系"}},[t._v("#")]),t._v(" 七、jQuery与$的关系")]),t._v(" "),s("p",[t._v("$ 就是 jQuery 的一个简写形式，\n$(‘#f00’) 和 jQuery(‘#foo’) 是等价的，$.ajax 和 jQuery.ajax 是等价的。")]),t._v(" "),s("h2",{attrs:{id:"八、页面加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、页面加载"}},[t._v("#")]),t._v(" 八、页面加载")]),t._v(" "),s("ol",[s("li",[t._v("$(document).ready(function(){});")]),t._v(" "),s("li",[t._v("$(function(){})；简写；")])]),t._v(" "),s("p",[t._v("和原生文档加载完的区别：")]),t._v(" "),s("p",[t._v("①原生：必须把所有的元素都加载完（包括图片），并且只能写一个onload；")]),t._v(" "),s("p",[t._v("②jquery：只把页面的结构加载完，读取到标签就可以了，可以写多个；")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("$(document).ready() 同 window.onload 的区别：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v(" 1. 执行时机不同，window.onload 必须等待网页中所有的内容加载完毕后（包括图片）才能执行，而 $(document).ready() 是网页中所有 DOM 结构绘制完毕就执行，可能 DOM 元素关联的东西并没有加载完。\n 2. window.onload 只能写一个 , 多个时后面的会覆盖掉前面的，而 $(document).ready() 可以写多个，不会覆盖。\n 3. window.onload没有简写形式，而$(document).ready()可以简写成$(function (){})。\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"九、元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#九、元素"}},[t._v("#")]),t._v(" 九、元素")]),t._v(" "),s("ol",[s("li",[t._v("dom元素：原生获取的就是dom元素（[HTMLCollection]）；")]),t._v(" "),s("li",[t._v("jquery元素：k.fn.init的元素就是jquery元素（k.fn.init）;")])]),t._v(" "),s("h2",{attrs:{id:"十、转换元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十、转换元素"}},[t._v("#")]),t._v(" 十、转换元素")]),t._v(" "),s("p",[t._v("使用jquery元素不能使用原生的方法，不能混着用，可以转换元素使用；")]),t._v(" "),s("ol",[s("li",[t._v("$(li)，将使用dom获取li变量的元素转换为jquery的元素；")]),t._v(" "),s("li",[t._v('jquery转dom：①$("li").get(下标)，②$("li")[下标]\n转dom加下标，转jquery加$；')])]),t._v(" "),s("h2",{attrs:{id:"十一、和其他框架冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十一、和其他框架冲突"}},[t._v("#")]),t._v(" 十一、和其他框架冲突")]),t._v(" "),s("p",[t._v("jQuery使用$符号的方式，还可以直接使用jQuery；")]),t._v(" "),s("ol",[s("li",[t._v("让渡：jQuery.noConflict();"),s("br"),t._v("\n将$符让给其他的库使用，自己还可以使用jQuery来代替$；\n如果jQuery库还想使用$符,可以使用闭包，将jQuery作为实参，$作为形参；")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"li"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jQuery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    使用$作为形参使用；\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("改变：var j = jQuery.noConflict()；声明任意变量来替换$符；改变之后不能再使用$；")])])])}),[],!1,null,null,null);a.default=e.exports}}]);